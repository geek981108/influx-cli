/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
)

// FunctionCreateRequest struct for FunctionCreateRequest
type FunctionCreateRequest struct {
	Name        string  `json:"name" yaml:"name"`
	Description *string `json:"description,omitempty" yaml:"description,omitempty"`
	OrgID       string  `json:"orgID" yaml:"orgID"`
	// script is script to be executed
	Script   string           `json:"script" yaml:"script"`
	Language FunctionLanguage `json:"language" yaml:"language"`
}

// NewFunctionCreateRequest instantiates a new FunctionCreateRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFunctionCreateRequest(name string, orgID string, script string, language FunctionLanguage) *FunctionCreateRequest {
	this := FunctionCreateRequest{}
	this.Name = name
	this.OrgID = orgID
	this.Script = script
	this.Language = language
	return &this
}

// NewFunctionCreateRequestWithDefaults instantiates a new FunctionCreateRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFunctionCreateRequestWithDefaults() *FunctionCreateRequest {
	this := FunctionCreateRequest{}
	return &this
}

// GetName returns the Name field value
func (o *FunctionCreateRequest) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *FunctionCreateRequest) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *FunctionCreateRequest) SetName(v string) {
	o.Name = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FunctionCreateRequest) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FunctionCreateRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FunctionCreateRequest) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FunctionCreateRequest) SetDescription(v string) {
	o.Description = &v
}

// GetOrgID returns the OrgID field value
func (o *FunctionCreateRequest) GetOrgID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OrgID
}

// GetOrgIDOk returns a tuple with the OrgID field value
// and a boolean to check if the value has been set.
func (o *FunctionCreateRequest) GetOrgIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrgID, true
}

// SetOrgID sets field value
func (o *FunctionCreateRequest) SetOrgID(v string) {
	o.OrgID = v
}

// GetScript returns the Script field value
func (o *FunctionCreateRequest) GetScript() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Script
}

// GetScriptOk returns a tuple with the Script field value
// and a boolean to check if the value has been set.
func (o *FunctionCreateRequest) GetScriptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Script, true
}

// SetScript sets field value
func (o *FunctionCreateRequest) SetScript(v string) {
	o.Script = v
}

// GetLanguage returns the Language field value
func (o *FunctionCreateRequest) GetLanguage() FunctionLanguage {
	if o == nil {
		var ret FunctionLanguage
		return ret
	}

	return o.Language
}

// GetLanguageOk returns a tuple with the Language field value
// and a boolean to check if the value has been set.
func (o *FunctionCreateRequest) GetLanguageOk() (*FunctionLanguage, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Language, true
}

// SetLanguage sets field value
func (o *FunctionCreateRequest) SetLanguage(v FunctionLanguage) {
	o.Language = v
}

func (o FunctionCreateRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["orgID"] = o.OrgID
	}
	if true {
		toSerialize["script"] = o.Script
	}
	if true {
		toSerialize["language"] = o.Language
	}
	return json.Marshal(toSerialize)
}

type NullableFunctionCreateRequest struct {
	value *FunctionCreateRequest
	isSet bool
}

func (v NullableFunctionCreateRequest) Get() *FunctionCreateRequest {
	return v.value
}

func (v *NullableFunctionCreateRequest) Set(val *FunctionCreateRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionCreateRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionCreateRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionCreateRequest(val *FunctionCreateRequest) *NullableFunctionCreateRequest {
	return &NullableFunctionCreateRequest{value: val, isSet: true}
}

func (v NullableFunctionCreateRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionCreateRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
