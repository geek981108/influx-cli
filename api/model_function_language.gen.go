/*
 * Subset of Influx API covered by Influx CLI
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 2.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api

import (
	"encoding/json"
	"fmt"
)

// FunctionLanguage the model 'FunctionLanguage'
type FunctionLanguage string

// List of FunctionLanguage
const (
	FUNCTIONLANGUAGE_PYTHON FunctionLanguage = "python"
	FUNCTIONLANGUAGE_FLUX   FunctionLanguage = "flux"
)

func (v *FunctionLanguage) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := FunctionLanguage(value)
	for _, existing := range []FunctionLanguage{"python", "flux"} {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid FunctionLanguage", value)
}

// Ptr returns reference to FunctionLanguage value
func (v FunctionLanguage) Ptr() *FunctionLanguage {
	return &v
}

type NullableFunctionLanguage struct {
	value *FunctionLanguage
	isSet bool
}

func (v NullableFunctionLanguage) Get() *FunctionLanguage {
	return v.value
}

func (v *NullableFunctionLanguage) Set(val *FunctionLanguage) {
	v.value = val
	v.isSet = true
}

func (v NullableFunctionLanguage) IsSet() bool {
	return v.isSet
}

func (v *NullableFunctionLanguage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFunctionLanguage(val *FunctionLanguage) *NullableFunctionLanguage {
	return &NullableFunctionLanguage{value: val, isSet: true}
}

func (v NullableFunctionLanguage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFunctionLanguage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
